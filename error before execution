## ERROR BEFORE EXECUTION


* / error \ *
minishell $> <<
minishell $> <
minishell $> >
* \ error / *

export t+=

echo "$_" last cmd


parsing : ls <> l

echo "$HOME $\" ask ?
export t+="| cat"
echo -n -

'
"
ls | exit 5 y
export t="     one  ywo"


./minishell < /dev/urandom
READ of size 1 at 0x60200001b91e thread T0
    #0 0x10b77552f in pip_check+0x2ef (minishell:x86_64+0x10001e52f)
    #1 0x10b7745fd in ft_checker+0x10d (minishell:x86_64+0x10001d5fd)
    #2 0x10b759a4b in main+0x28b (minishell:x86_64+0x100002a4b)
    #3 0x7fff692ddcc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

0x60200001b91e is located 0 bytes to the right of 14-byte region [0x60200001b910,0x60200001b91e)
allocated by thread T0 here:
    #0 0x10b82217d in wrap_ft_malloc+0x9d (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4917d)
    #1 0x10b7bac34 in xft_malloc+0x8 (libreadline.8.dylib:x86_64+0x25c34)
    #2 0x10b797f7a in readline_internal_teardown+0xfa (libreadline.8.dylib:x86_64+0x2f7a)
    #3 0x10b797a98 in readline+0x5b (libreadline.8.dylib:x86_64+0x2a98)
    #4 0x10b759a0b in main+0x24b (minishell:x86_64+0x100002a0b)
    #5 0x7fff692ddcc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)




ERRORORRRRR
cat << l | cat << p
cat << $""

"ls -la"

===========
export a c= | 2 times
export +=
export $a+=$a | a = "ls     -la"

export a="''"
echo $a
====DONE===

'' | ""

===========
Without HOME cd sigv
====DONE===

echo $"$"$

===========
<< $
$
====DONE===

===========
export ==
====DONE===

===========
exit
exit aaa aaa
====DONE===






APRES
unset ""
export ""



Erorr top
    ctrl  + \ =>  minishell promt lose
herdoc  << ""

 }
-> 145          if (mini->cmd[0x0][0x0] == '$' && !env_node(&env, &mini->cmd[0x0][0x1]))
   146          {
   147                  while (mini->cmd[i])
   148                  {
exit " 1"
DONE
